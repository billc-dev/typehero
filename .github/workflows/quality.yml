name: Quality

on:
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

env:
  FORCE_COLOR: 3
  TURBO_TOKEN: ${{ secrets.TURBO_TOKEN }}
  TURBO_TEAM: ${{ vars.TURBO_TEAM }}

jobs:
  prettier:
    name: Prettier
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install
        uses: ./tooling/github-actions/install

      - name: Run Prettier
        run: turbo format --continue

  eslint:
    name: ESLint
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup and install
        uses: ./tooling/github-actions/install

      - name: Lint
        run: turbo lint --continue

  typecheck:
    name: TypeCheck
    timeout-minutes: 15
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install
        uses: ./tooling/github-actions/install

      - name: Cache TypeScript TSBuild Info Files
        id: cache-typescript-tsbuildinfo
        uses: actions/cache@v3
        with:
          path: node_modules/.cache/*-tsbuildinfo.json
          # We use the commit hash as the key to always update the cache as a
          # workaround to this issue:
          # https://github.com/actions/cache/issues/106
          key: ${{ runner.os }}-cache-typescript-tsbuildinfo-${{ github.sha }}
          restore-keys: ${{ runner.os }}-cache-typescript-tsbuildinfo-

      - name: Run TypeScript type check
        run: turbo typecheck --continue
  
  e2e:
    name: E2E
    timeout-minutes: 30
    runs-on: ubuntu-latest
    container: 
      image: mcr.microsoft.com/playwright:v1.38.0-jammy
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install
        uses: ./tooling/github-actions/install
      
      - name: Setup database
        run: |
          cp .env.example .env
          docker compose up -d --wait
          pnpm db:push
          pnpm db:seed

      - name: Build
        run: turbo build
        env:
          EDGE_CONFIG: ${{ secrets.EDGE_CONFIG }}
          GITHUB_ID: ${{ secrets.WEB_GITHUB_ID }}
          GITHUB_SECRET: ${{ secrets.WEB_GITHUB_SECRET }}
        
      - name: Run Playwright tests
        run: turbo test:e2e --continue
        env:
          DATABASE_URL: mysql://dev:dev@localhost/typehero
          EDGE_CONFIG: ${{ secrets.EDGE_CONFIG }}
          GITHUB_ID: ${{ secrets.WEB_GITHUB_ID }}
          GITHUB_SECRET: ${{ secrets.WEB_GITHUB_SECRET }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
          NEXTAUTH_URL: http://localhost:3000

      - name: Publish report
        id: report
        if: always()
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: typehero
          directory: apps/web/playwright-report
          wranglerVersion: '3'
